2025-05-30 00:16:41,179 - INFO - main:interactive:34 - üü¶ Specialized Browser agent is enabled: True
2025-05-30 00:16:52,552 - INFO - sse:sse_client:55 - Connecting to SSE endpoint: http://localhost:8100/sse
2025-05-30 00:16:53,545 - INFO - _client:_send_single_request:1740 - HTTP Request: GET http://localhost:8100/sse "HTTP/1.1 200 OK"
2025-05-30 00:16:53,546 - INFO - sse:sse_reader:75 - Received endpoint URL: http://localhost:8100/messages?session_id=c0af9ae9a1a14bfe82835532e2d229d9
2025-05-30 00:16:53,547 - INFO - sse:sse_client:148 - Starting post writer with endpoint URL: http://localhost:8100/messages?session_id=c0af9ae9a1a14bfe82835532e2d229d9
2025-05-30 00:16:53,821 - INFO - _client:_send_single_request:1740 - HTTP Request: POST http://localhost:8100/messages?session_id=c0af9ae9a1a14bfe82835532e2d229d9 "HTTP/1.1 202 Accepted"
2025-05-30 00:16:53,826 - INFO - _client:_send_single_request:1740 - HTTP Request: POST http://localhost:8100/messages?session_id=c0af9ae9a1a14bfe82835532e2d229d9 "HTTP/1.1 202 Accepted"
2025-05-30 00:16:53,831 - INFO - _client:_send_single_request:1740 - HTTP Request: POST http://localhost:8100/messages?session_id=c0af9ae9a1a14bfe82835532e2d229d9 "HTTP/1.1 202 Accepted"
2025-05-30 00:16:56,558 - INFO - main:interactive:42 - üü¶ Browser agent is enabled. Using browser perception prompt.
2025-05-30 00:17:34,165 - WARNING - agent_loop3:_initialize_session:88 - ‚ö†Ô∏è WARNING: MemorySearch has been disabled from code!! Enable it to use memory.
2025-05-30 00:17:34,165 - INFO - browser_agent:initialize:55 - Initializing BrowserAgent...
2025-05-30 00:17:34,165 - INFO - browser_agent:initialize:60 - BrowserAgent initialized successfully.
2025-05-30 00:17:34,165 - INFO - agent_loop3:_run_initial_perception:101 - üìù Initial Perception
2025-05-30 00:17:34,166 - JSON_BLOCK - log_config:logger_json_block:56 - 
================================================================================
üìå Inital Perception input:
================================================================================
{
  "current_time": "2025-05-29T18:47:34.165780",
  "run_id": "42a28032-9ec9-481a-9dfe-53999094879d-P",
  "snapshot_type": "user_query",
  "original_query": "Query 1: Open https://www.inkers.ai in a new tab, and click on Demo Button. Inform Decision that whenever it calls any tool, it will immediately return the broswer state, which will have id's for buttons and things it can interact with. So it will have to save them for reuse for next step.",
  "raw_input": "Query 1: Open https://www.inkers.ai in a new tab, and click on Demo Button. Inform Decision that whenever it calls any tool, it will immediately return the broswer state, which will have id's for buttons and things it can interact with. So it will have to save them for reuse for next step.",
  "memory_excerpt": null,
  "current_plan": {},
  "completed_steps": [
    {
      "index": "ROOT",
      "description": "Query 1: Open https://www.inkers.ai in a new tab, and click on Demo Button. Inform Decision that whenever it calls any tool, it will immediately return the broswer state, which will have id's for buttons and things it can interact with. So it will have to save them for reuse for next step.",
      "type": "ROOT",
      "status": "completed",
      "result": null,
      "conclusion": null,
      "error": null,
      "perception": null,
      "from_step": null
    }
  ],
  "failed_steps": [],
  "globals_schema": {
    "memory": [
      "NoneType",
      "None"
    ]
  },
  "timestamp": "...",
  "schema_version": 1
}
================================================================================

2025-05-30 00:17:34,192 - PROMPT_BLOCK - log_config:logger_prompt:83 - 
================================================================================
üìù üìù Perception prompt:
================================================================================
  ############################################################
  #  Perception Module Prompt ‚Äì Gemini Flash 2.0
  #  Role  : High-Level Interpreter & Controller
  #  Output: ERORLL snapshot + Routing Decision + Summarization Directive
  #  Format: STRICT JSON only ‚Äì no markdown, no prose
  ############################################################
  You are the PERCEPTION module of an agentic reasoning system.
  Your job is to **observe**, **assess**, and **route**:
  - Understand the original user query or the result of an executed step
  - Decide if the goal is achieved (‚Üí route to Summarizer)
  - Or if planning is required for browser interactions tasks (‚Üí route to Browser)
  - Or if planning is required for any other tasks (‚Üí route to Decision)
  - When routing to Summarizer, provide a clear summarization instruction
  You do not conclude. You do not plan.  
  You **control the loop** by issuing structured, routable status reports.
  ## ‚úÖ MODES
  ### Mode: `"user_query"`
  You are analyzing the original user query.
  Your tasks:
  - Identify key entities (named things, people, topics, values)
  - Describe the expected result type (number, list, explanation, etc.)
  - Check memory and globals to see if the query is already solvable
  - Decide:
    - If solvable now ‚Üí `route = "summarize"`
    - Else ‚Üí `route = "decision" OR "browser"`
  ### Mode: `"step_result"`
  You are analyzing the output of the most recently executed step.
  Your tasks:
  - Extract any useful entities or insights
  - Evaluate tool success/failure
  - Check if the result solves the query or helps progress
  - Decide:
    - If final goal is met or no more steps help ‚Üí `route = "summarize"`
    - Otherwise ‚Üí `route = "decision" OR "browser"`
  ## ‚úÖ INPUT FORMAT
  {
    "snapshot_type": "user_query" | "step_result",
    "original_query": "...",
    "raw_input": "...",             // user query or step output
    "memory_excerpt": [...],        // past solved graphs or summaries
    "globals_schema": { ... },      // currently available variables
    "current_plan": [...],          // nodes + steps if available
    "completed_steps": [...],       // history of successful nodes
    "failed_steps": [...]           // history of failed nodes/tools
  }
  ````
  ## ‚úÖ OUTPUT FORMAT (ERORLL + route + summarization instruction)
  {
    "entities": ["..."],
    "result_requirement": "...",
    "original_goal_achieved": true/false,
    "local_goal_achieved": true/false,
    "confidence": "0.84",
    "reasoning": "...",
    "local_reasoning": "...",
    "last_tooluse_summary": "...",
    "solution_summary": "...",
    "route": "summarize" | "decision" | "browser",
    "instruction_to_summarize": "..."   // only when route = "summarize"
  }
  ## ‚úÖ INSTRUCTION TO SUMMARIZE ‚Äì Guidelines
  This field is only required when:
  "route": "summarize"
  It must:
  * Be descriptive.
  * Tell the Summarizer **exactly what to include**
  * Specify format, tone, or structure if needed
  * Format might be requested by the user, if not then fall back to markdown. 
  Examples:
  * `"Write a short user-facing summary of project price, name, and location in markdown format."`
  * `"Summarize the extracted chunks and highlight whether any contain dates or financial data. Return data in html format."`
  * `"Summarize the final tool results for the user in plain language"`
  ## ‚úÖ ROUTING LOGIC
  * Use `route = "summarize"` **only if**:
    * Goal is solved (`original_goal_achieved = true`), you have all the details, and the query/step cannot be solved by python code.
    * OR tools failed repeatedly and further steps are unhelpful
    * In both cases, you must provide `instruction_to_summarize`
    * Summarization task does not requise complex mathematical operations that actually need calculator/tools.
  * Use `route = "browser"` when:
    * Only for tasks with browser interactions where planning is possible or required. 
    * Browser interactions are navigating webpages, clicking on elements, filling forms 
    * Fetching content from webpages is NOT browser interactions
    * `instruction_to_summarize` must be omitted or `"Not applicable"`
  * Use `route = "decision"` when:
    * Other tasks where tool-based planning is possible or required. 
    * `instruction_to_summarize` must be omitted or `"Not applicable"`
  ## ‚úÖ EXAMPLES
  {
    "entities": ["DLF", "project price"],
    "result_requirement": "Price of DLF project in NCR",
    "original_goal_achieved": true,
    "local_goal_achieved": true,
    "confidence": "0.95",
    "reasoning": "Search result included name, price, and location.",
    "local_reasoning": "Tool output directly listed the required values.",
    "last_tooluse_summary": "webpage_url_to_llm_summary succeeded",
    "solution_summary": "Price: ‚Çπ2.65 Cr. Project: DLF Crest, Sector 54, Gurgaon.",
    "route": "summarize",
    "instruction_to_summarize": "Generate a concise user-facing summary of project name, price, and location. Avoid raw tool output. Markdown formatting"
  }
  {
    "entities": ["TCS", "stock price"],
    "result_requirement": "Click on demo",
    "original_goal_achieved": false,
    "local_goal_achieved": true,
    "confidence": "0.72",
    "reasoning": "Tool ran successfully, but the content was not structured or informative.",
    "local_reasoning": "HTML fetched, but lacked financial data.",
    "last_tooluse_summary": "webpage_url_to_raw_text succeeded but no price found",
    "solution_summary": "Not ready yet.",
    "route": "decision"
  }
  {
    "entities": ["Inkers.ai", "Demo Button"],
    "result_requirement": "Click the Demo button on Inkers.ai and save the browser state including element IDs.",
    "original_goal_achieved": false,
    "local_goal_achieved": true,
    "confidence": "0.72",
    "reasoning": "The webpage has been opened, and the page structure including element IDs has been retrieved. The next step is to click the Demo button. The raw input shows that navigation link with text Demo exists. The Id for it is 8.  The original query asked to immediately return browser state. So, we just need to click demo button",
    "local_reasoning": "The page structure includes the 'Demo' button with id 8 which is a navigation link. The next logical step is to click this button to fulfill the original query.",
    "last_tooluse_summary": "Successfully opened Inkers.ai and retrieved page structure using get_comprehensive_markdown.", 
    "solution_summary": "Not ready yet.",
    "route": "browser"
  }
  ## ‚úÖ FINAL NOTES
  * No markdown. No prose. Output strict JSON only.
  * Do not hallucinate tool success or failure.
  * Always refer to tool names in `last_tooluse_summary`.
  * Be deterministic and helpful.
  - You will be given `"globals_schema"` inside which you can find a lot of information regarding past run. 
    - If you think you have all information and we can summarize, then Information within `"globals_schema"` MUST be used to summarize in as fewer steps as possible.
  - If you see a lot of `"failed_steps"` then fall back to information within `"globals_schema"` and call summarize.
  * Remember Decision can only write python code to call tools. IT DOES NOT HAVE SEMANTIC CAPABILITIES. So, you need to be careful when you route to `decision`. If YOU have all the information, then skip to `summarize` and provide all available information in `instruction_to_summarize` to summarize.
  * Remember Decision will try to use keyword search to extract information. That is BAD, and will not help extract sematics or detailed information. If you see that is what Decision planning to do in the next step, pivot to `summarize`.
  * DO NOT let Decision execute any code that is trying to summarize or extract. Route to Summarizer immediately. 
  * Remember Summarizer can only read what you send or `global_schema`, it doesn't have access to any other tools or ways to access internet or any other information outside what you send or is already available in `global_schema`. 
  You control the flow. Decide cleanly. Route responsibly. Solve in as fewer steps as possible.
  {
    "current_time": "2025-05-29T18:47:34.165780",
    "run_id": "42a28032-9ec9-481a-9dfe-53999094879d-P",
    "snapshot_type": "user_query",
    "original_query": "Query 1: Open https://www.inkers.ai in a new tab, and click on Demo Button. Inform Decision that whenever it calls any tool, it will immediately return the broswer state, which will have id's for buttons and things it can interact with. So it will have to save them for reuse for next step.",
    "raw_input": "Query 1: Open https://www.inkers.ai in a new tab, and click on Demo Button. Inform Decision that whenever it calls any tool, it will immediately return the broswer state, which will have id's for buttons and things it can interact with. So it will have to save them for reuse for next step.",
    "memory_excerpt": null,
    "current_plan": {},
    "completed_steps": [
      {
        "index": "ROOT",
        "description": "Query 1: Open https://www.inkers.ai in a new tab, and click on Demo Button. Inform Decision that whenever it calls any tool, it will immediately return the broswer state, which will have id's for buttons and things it can interact with. So it will have to save them for reuse for next step.",
        "type": "ROOT",
        "status": "completed",
        "result": null,
        "conclusion": null,
        "error": null,
        "perception": null,
        "from_step": null
      }
    ],
    "failed_steps": [],
    "globals_schema": {
      "memory": [
        "NoneType",
        "None"
      ]
    },
    "timestamp": "...",
    "schema_version": 1
  }
================================================================================

2025-05-30 00:17:36,196 - INFO - models:generate_content:7118 - AFC is enabled with max remote calls: 10.
2025-05-30 00:17:38,345 - INFO - _client:_send_single_request:1740 - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent "HTTP/1.1 200 OK"
2025-05-30 00:17:38,348 - INFO - agent_loop3:_run_initial_perception:104 - üìù Initial Perception output
2025-05-30 00:17:38,348 - JSON_BLOCK - log_config:logger_json_block:56 - 
================================================================================
üìå Initial Perception output:
================================================================================
{
  "entities": [
    "Inkers.ai",
    "Demo Button",
    "Browser state",
    "element IDs"
  ],
  "result_requirement": "Open Inkers.ai, click the Demo button, and save the browser state including element IDs for future use.",
  "original_goal_achieved": false,
  "local_goal_achieved": false,
  "confidence": "0.9",
  "reasoning": "The original query requires opening a webpage, clicking a specific element, and saving the browser state. This involves browser interaction, which should be routed to the Browser module for planning and execution.",
  "local_reasoning": "The task involves opening a webpage and interacting with elements within it. The Browser module is designed for such tasks.",
  "last_tooluse_summary": "Not applicable",
  "solution_summary": "Not ready yet.",
  "route": "browser",
  "instruction_to_summarize": "Not applicable"
}
================================================================================

2025-05-30 00:17:38,355 - INFO - agent_loop3:run:60 - ‚öôÔ∏è Routing to BrowserAgent for browser-related query.
2025-05-30 00:17:49,591 - INFO - session:setup_browser_context:330 - üåé Launching local playwright chromium browser with user_data_dir=C:\Users\dsaha\.config\browseruse\profiles\default
2025-05-30 00:17:51,917 - WARNING - session:setup_browser_context:361 - üö® Found potentially conflicting Chrome process pid=8880 already running with the same user_data_dir=C:\Users\dsaha\.config\browseruse\profiles\default
2025-05-30 00:17:53,127 - INFO - session:stop:213 - üõë Shutting down browser...
