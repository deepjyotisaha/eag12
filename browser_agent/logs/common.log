2025-05-30 15:19:34,432 - INFO - browser_main:main:23 - Loading environment variables...
2025-05-30 15:19:34,433 - INFO - browser_main:main:27 - Loading MCP server configurations...
2025-05-30 15:19:34,435 - INFO - browser_main:main:41 - Initializing MultiMCP with browser tools...
2025-05-30 15:19:34,445 - INFO - sse:sse_client:55 - Connecting to SSE endpoint: http://localhost:8100/sse
2025-05-30 15:19:35,162 - INFO - _client:_send_single_request:1740 - HTTP Request: GET http://localhost:8100/sse "HTTP/1.1 200 OK"
2025-05-30 15:19:35,163 - INFO - sse:sse_reader:75 - Received endpoint URL: http://localhost:8100/messages?session_id=16c5b6c76a774796a7d064ea6ac48f53
2025-05-30 15:19:35,163 - INFO - sse:sse_client:148 - Starting post writer with endpoint URL: http://localhost:8100/messages?session_id=16c5b6c76a774796a7d064ea6ac48f53
2025-05-30 15:19:35,424 - INFO - _client:_send_single_request:1740 - HTTP Request: POST http://localhost:8100/messages?session_id=16c5b6c76a774796a7d064ea6ac48f53 "HTTP/1.1 202 Accepted"
2025-05-30 15:19:35,431 - INFO - _client:_send_single_request:1740 - HTTP Request: POST http://localhost:8100/messages?session_id=16c5b6c76a774796a7d064ea6ac48f53 "HTTP/1.1 202 Accepted"
2025-05-30 15:19:35,436 - INFO - _client:_send_single_request:1740 - HTTP Request: POST http://localhost:8100/messages?session_id=16c5b6c76a774796a7d064ea6ac48f53 "HTTP/1.1 202 Accepted"
2025-05-30 15:19:35,443 - INFO - browser_main:main:47 - Successfully initialized MultiMCP with 24 tools
2025-05-30 15:19:35,443 - INFO - browser_main:main:50 - 
=== Available Tools ===
2025-05-30 15:19:35,443 - INFO - browser_main:main:53 - 
- `open_tab(string)  # Open a new browser tab with the specified URL`
- `go_to_url(string)  # Navigate to URL in the current tab`
- `go_back()  # Go back to the previous page`
- `search_google(string)  # Search the query in Google in the current tab`
- `click_element_by_index(integer)  # Click an element by its index in the current page`
- `input_text(integer, string)  # Input text into an interactive element`
- `send_keys(string)  # Send special keys like Escape, Backspace, Enter, or shortcuts like Control+C`
- `scroll_down(integer)  # Scroll down the page by pixel amount - if none given, scroll one page`
- `scroll_up(integer)  # Scroll up the page by pixel amount - if none given, scroll one page`
- `scroll_to_text(string)  # Scroll to specific text on the page`
- `switch_tab(integer)  # Switch to a specific tab`
- `close_tab(integer)  # Close a specific tab`
- `get_dropdown_options(integer)  # Get all options from a native dropdown element`
- `select_dropdown_option(integer, string)  # Select dropdown option by text`
- `drag_drop(integer, integer)  # Drag and drop elements or between coordinates - useful for canvas, sliders, file uploads`
- `get_enhanced_page_structure()  # Get comprehensive page structure as JSON with all content AND interactive element IDs`
- `get_comprehensive_markdown()  # Get comprehensive page markdown with all content AND interactive element IDs`
- `save_pdf()  # Save PDF from current page by temporarily removing overlays`
- `wait(integer)  # Wait for specified number of seconds (default 3)`
- `done(boolean, string)  # Complete task - indicates if task is finished successfully or not`
- `get_session_snapshot(boolean, boolean)  # Get current browser session snapshot with elements and optional screenshot saved as PNG file`
- `take_screenshot(boolean, boolean)  # Take a screenshot of the current page and save as PNG file (returns file path, not base64)`
- `get_interactive_elements(string, boolean, boolean)  # Get interactive elements with smart viewport and strict filtering`
- `close_browser_session()  # Close the browser session`
2025-05-30 15:19:35,444 - INFO - browser_main:main:56 - Initializing BrowserAgent...
2025-05-30 15:19:35,444 - INFO - browser_agent:__init__:37 - Initializing BrowserAgent components...
2025-05-30 15:19:35,784 - INFO - browser_agent:__init__:41 - BrowserAgent initialized with session ID: 5e5b7408-0bec-46cd-b668-19d0ebab2cf0
2025-05-30 15:19:36,119 - INFO - browser_main:main:58 - BrowserAgent initialized successfully
2025-05-30 15:20:02,266 - INFO - browser_main:main:66 - Processing query: Open https://www.inkers.ai in a new tab, and click on Demo Button.
2025-05-30 15:20:02,267 - INFO - browser_agent:run:59 - Starting browser operation...
2025-05-30 15:20:02,267 - INFO - browser_context:__init__:43 - Initializing BrowserContext for session 5e5b7408-0bec-46cd-b668-19d0ebab2cf0 with query: Open https://www.inkers.ai in a new tab, and click on Demo Button.
2025-05-30 15:20:02,267 - INFO - browser_context:__init__:53 - Initializing BrowserContext, creating root node...
2025-05-30 15:20:02,267 - INFO - browser_agent:_run_initial_perception:146 - üìù Initial Perception
2025-05-30 15:20:02,267 - JSON_BLOCK - log_config:logger_json_block:56 - 
================================================================================
üìå Inital Perception input:
================================================================================
{
  "current_time": "2025-05-30T09:50:02.267847",
  "run_id": "5e5b7408-0bec-46cd-b668-19d0ebab2cf0-P",
  "snapshot_type": "user_query",
  "original_query": "Open https://www.inkers.ai in a new tab, and click on Demo Button.",
  "raw_input": "Open https://www.inkers.ai in a new tab, and click on Demo Button.",
  "memory_excerpt": [],
  "current_plan": {},
  "completed_steps": [],
  "failed_steps": [],
  "globals_schema": {},
  "timestamp": "...",
  "schema_version": 1
}
================================================================================

2025-05-30 15:20:02,269 - PROMPT_BLOCK - log_config:logger_prompt:83 - 
================================================================================
üìù üìù Browser perception prompt:
================================================================================
  ############################################################
  #  Browser Agent Perception Module Prompt ‚Äì Gemini Flash 2.0
  #  Role  : High-Level Interpreter & Controller
  #  Output: ERORLL snapshot + Summarization Directive
  #  Format: STRICT JSON only ‚Äì no markdown, no prose
  ############################################################
  You are the PERCEPTION module of a browser automation agent.
  Your job is to **observe**, **assess**, and **route**:
  - Understand the original user query or the result of an executed step
  - Decide if the goal is achieved (‚Üí route to Summarizer)
  - Or if planning is required for browser interactions tasks (‚Üí route to Browser)
  - When routing to Summarizer, provide a clear summarization instruction
  You do not conclude. You do not plan.  
  You **control the loop** by issuing structured, routable status reports.
  ## ‚úÖ MODES
  ### Mode: `"user_query"`
  You are analyzing the original user query.
  Your tasks:
  - Identify key entities (named things, people, topics, values)
  - Describe the expected result type (number, list, explanation, etc.)
  - Check memory and globals to see if the query is already solvable
  - Decide:
    - If solvable now ‚Üí `route = "summarize"`
    - Else ‚Üí `route = "browser"`
  ### Mode: `"step_result"`
  You are analyzing the output of the most recently executed step.
  Your tasks:
  - Extract any useful entities or insights
  - Evaluate tool success/failure
  - Check if the result solves the query or helps progress
  - Decide:
    - If final goal is met or no more steps help ‚Üí `route = "summarize"`
    - Otherwise ‚Üí `route = "browser"`
  ## ‚úÖ INPUT FORMAT
  {
    "snapshot_type": "user_query" | "step_result",
    "original_query": "...",
    "raw_input": "...",             // user query or step output
    "memory_excerpt": [...],        // past solved graphs or summaries
    "globals_schema": { ... },      // currently available variables
    "current_plan": [...],          // nodes + steps if available
    "completed_steps": [...],       // history of successful nodes
    "failed_steps": [...]           // history of failed nodes/tools
  }
  ````
  ## ‚úÖ OUTPUT FORMAT (ERORLL + route + summarization instruction)
  {
    "entities": ["..."],
    "result_requirement": "...",
    "original_goal_achieved": true/false,
    "local_goal_achieved": true/false,
    "confidence": "0.84",
    "reasoning": "...",
    "local_reasoning": "...",
    "last_tooluse_summary": "...",
    "solution_summary": "...",
    "route": "summarize" | "browser",
    "instruction_to_summarize": "..."   // only when route = "summarize"
  }
  ## ‚úÖ INSTRUCTION TO SUMMARIZE ‚Äì Guidelines
  This field is only required when:
  "route": "summarize"
  It must:
  * Be descriptive.
  * Tell the Summarizer **exactly what to include**
  * Specify format, tone, or structure if needed
  * Format might be requested by the user, if not then fall back to markdown. 
  Examples:
  * `"Write a short user-facing summary of project price, name, and location in markdown format."`
  * `"Summarize the extracted chunks and highlight whether any contain dates or financial data. Return data in html format."`
  * `"Summarize the final tool results for the user in plain language"`
  ## ‚úÖ ROUTING LOGIC
  * Use `route = "summarize"` **only if**:
    * Goal is solved (`original_goal_achieved = true`), you have all the details, and the query/step cannot be solved by python code.
    * OR tools failed repeatedly and further steps are unhelpful
    * In both cases, you must provide `instruction_to_summarize`
    * Summarization task does not requise complex mathematical operations that actually need calculator/tools.
  * Use `route = "browser"` when:
    * Only for tasks with browser interactions where planning is possible or required. 
    * Browser interactions are navigating webpages, clicking on elements, filling forms 
    * Fetching content from webpages is NOT browser interactions
    * `instruction_to_summarize` must be omitted or `"Not applicable"`
  ## ‚úÖ EXAMPLES
  {
    "entities": ["Inkers.ai", "Demo Button"],
    "result_requirement": "Click the Demo button on Inkers.ai and save the browser state including element IDs.",
    "original_goal_achieved": false,
    "local_goal_achieved": true,
    "confidence": "0.72",
    "reasoning": "The webpage has been opened, and the page structure including element IDs has been retrieved. The next step is to click the Demo button. The raw input shows that navigation link with text Demo exists. The Id for it is 8.  The original query asked to immediately return browser state. So, we just need to click demo button",
    "local_reasoning": "The page structure includes the 'Demo' button with id 8 which is a navigation link. The next logical step is to click this button to fulfill the original query.",
    "last_tooluse_summary": "Successfully opened Inkers.ai and retrieved page structure using get_comprehensive_markdown.", 
    "solution_summary": "Not ready yet.",
    "route": "browser"
  }
  ## ‚úÖ FINAL NOTES
  * No markdown. No prose. Output strict JSON only.
  * ALL fields in the output format are REQUIRED. Do not omit any fields.
  * Do not hallucinate tool success or failure.
  * Always refer to tool names in `last_tooluse_summary`.
  * Be deterministic and helpful.
  - You will be given `"globals_schema"` inside which you can find a lot of information regarding past run. 
    - If you think you have all information and we can summarize, then Information within `"globals_schema"` MUST be used to summarize in as fewer steps as possible.
  - If you see a lot of `"failed_steps"` then fall back to information within `"globals_schema"` and call summarize.
  * Remember Decision can only write python code to call tools for browser interaction. IT DOES NOT HAVE SEMANTIC CAPABILITIES. So, you need to be careful when you route to `browser`. If YOU have all the information, then skip to `summarize` and provide all available information in `instruction_to_summarize` to summarize.
  * Remember Decision will try to use keyword search to extract information. That is BAD, and will not help extract sematics or detailed information. If you see that is what Decision planning to do in the next step, pivot to `summarize`.
  * DO NOT let Decision execute any code that is trying to summarize or extract. Route to Summarizer immediately. 
  * Remember Summarizer can only read what you send or `global_schema`, it doesn't have access to any other tools or ways to access internet or any other information outside what you send or is already available in `global_schema`. 
  You control the flow. Decide cleanly. Route responsibly. Solve in as fewer steps as possible.
  {
    "current_time": "2025-05-30T09:50:02.267847",
    "run_id": "5e5b7408-0bec-46cd-b668-19d0ebab2cf0-P",
    "snapshot_type": "user_query",
    "original_query": "Open https://www.inkers.ai in a new tab, and click on Demo Button.",
    "raw_input": "Open https://www.inkers.ai in a new tab, and click on Demo Button.",
    "memory_excerpt": [],
    "current_plan": {},
    "completed_steps": [],
    "failed_steps": [],
    "globals_schema": {},
    "timestamp": "...",
    "schema_version": 1
  }
================================================================================

2025-05-30 15:20:02,270 - INFO - models:generate_content:7118 - AFC is enabled with max remote calls: 10.
2025-05-30 15:20:05,580 - INFO - _client:_send_single_request:1740 - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent "HTTP/1.1 200 OK"
2025-05-30 15:20:05,582 - INFO - browser_agent:_run_initial_perception:149 - üìù Initial Perception output
2025-05-30 15:20:05,582 - JSON_BLOCK - log_config:logger_json_block:56 - 
================================================================================
üìå Initial Perception output:
================================================================================
{
  "entities": [
    "https://www.inkers.ai",
    "Demo Button"
  ],
  "result_requirement": "Open the specified URL in a new tab and click the Demo button. Return the browser state after clicking the button.",
  "original_goal_achieved": false,
  "local_goal_achieved": false,
  "confidence": "0.95",
  "reasoning": "The user query requires opening a URL and clicking a specific button. This necessitates browser interaction. The goal is not achievable without interacting with the browser.",
  "local_reasoning": "The task requires opening a webpage and interacting with it, specifically clicking the 'Demo Button'. This is a clear case for browser interaction.",
  "last_tooluse_summary": "Not applicable.",
  "solution_summary": "Not applicable.",
  "route": "browser",
  "instruction_to_summarize": "Not applicable"
}
================================================================================

2025-05-30 15:20:05,587 - INFO - browser_agent:run:66 - Perception result: None
2025-05-30 15:20:05,588 - INFO - browser_main:main:68 - Query result: Browser operation failed: 'NoneType' object is not subscriptable
